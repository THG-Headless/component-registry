{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "review@react",
  "type": "registry:ui",
  "title": "Review",
  "description": "Individual review component with a title, rating, review body, date, author and vote buttons.",
  "registryDependencies": [
    "ratings@react",
    "button@react"
  ],
  "files": [
    {
      "path": "registry/review/review.tsx",
      "content": "import React from \"react\"\nimport Ratings from \"../ratings/ratings\";\nimport { Button } from \"../button/button\";\n\nexport enum VoteType {\n  UPVOTE = 'UPVOTE',\n  DOWNVOTE = 'DOWNVOTE',\n  REPORT = 'REPORT'\n}\n\ninterface ReviewProps {\n    headline: string;\n    rating: number;\n    comments: string;\n    maxRating?: number;\n    date?: string;\n    author?: string;\n    onVote?: (voteType: VoteType) => void;\n    upVoteCount?: number;\n    downVoteCount?: number;\n}\n\nexport const Review: React.FC<ReviewProps> = ({\n    headline,\n    rating,\n    maxRating = 5,\n    comments,\n    date,\n    author,\n    onVote,\n    upVoteCount,\n    downVoteCount\n    }) => {\n\n    return (\n        <div className=\"flex flex-col gap-4 w-full\">\n            <h4 className=\"text-md font-medium\">{headline}</h4>\n            { rating && maxRating && (\n                <Ratings rating={rating} maxRating={maxRating} className=\"skin-primary\" />\n            )}\n            <p className=\"text-body\">{comments}</p>\n            { (date || author) && (\n                <div className=\"flex items-center text-body font-bold gap-1\">\n                    <span>{date}</span>\n                    <span>by {author}</span>\n                </div>\n            )}\n            {onVote && (\n                <div className=\"flex flex-col gap-2\">\n                    <p>Was this review helpful?</p>\n                    <div className=\"flex gap-2\">\n                        <Button className=\"skin-secondary\" onClick={() => onVote(VoteType.UPVOTE)}>Yes {typeof upVoteCount === 'number' ? `(${upVoteCount})` : ``}</Button>\n                        <Button className=\"skin-secondary\" onClick={() => onVote(VoteType.DOWNVOTE)}>No {typeof downVoteCount === 'number' ? `(${downVoteCount})` : ``}</Button>\n                        <Button className=\"skin-secondary\" onClick={() => onVote(VoteType.REPORT)}>Report this review</Button>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Review",
      "type": "registry:ui"
    }
  ]
}