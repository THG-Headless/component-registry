{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "text-input@react",
  "type": "registry:ui",
  "title": "Text Input",
  "description": "A text input field with a label, helper text, and error message",
  "files": [
    {
      "path": "registry/text-input/text-input.tsx",
      "content": "import React, { useState } from \"react\";\nimport type { ChangeEvent } from \"react\";\n\ninterface TextInputProps {\n  id?: string;\n  name?: string;\n  label?: string;\n  status?: string;\n  placeholder?: string;\n  helperText?: string;\n  errorMessage?: string;\n  isInvalid?: boolean;\n  disabled?: boolean; // Added disabled prop\n  autocomplete?: string;\n  spellcheck?: boolean;\n  value?: string;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onClear?: () => void;\n}\n\nexport const TextInput: React.FC<TextInputProps> = ({\n  id = \"basic-input\",\n  name = \"basic-input\",\n  label = \"Label\",\n  status = \"(Optional status)\",\n  placeholder = \"Placeholder text\",\n  helperText = \"Helper text\",\n  errorMessage = \"Error message\",\n  isInvalid = false,\n  disabled = false, // Added disabled with default false\n  autocomplete = \"off\",\n  spellcheck = true,\n\n  value,\n  onChange,\n  onClear,\n}) => {\n  const [inputValue, setInputValue] = useState(value || \"\");\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n    onChange && onChange(e);\n  };\n\n  const handleClear = () => {\n    setInputValue(\"\");\n    onClear && onClear();\n  };\n\n  const helperId = `${id}-helper`;\n  const statusId = `${id}-status`;\n  const messageId = `${id}-message`;\n\n  return (\n    <div className=\"skin-form input-wrapper w-full wrapper group\">\n      <div className=\"input-label-wrapper\">\n        <label className=\"input-label text-body font-semi-bold\" htmlFor={id}>\n          {label}\n        </label>\n        <span\n          className=\"input-status text-sm font-light soft\"\n          aria-hidden=\"true\"\n        >\n          {status}\n        </span>\n      </div>\n      <div className=\"input-field-wrapper\">\n        <input\n          type=\"text\"\n          className=\"input-field !text-body placeholder:soft interactive\"\n          id={id}\n          name={name}\n          placeholder={placeholder}\n          aria-invalid={isInvalid ? \"true\" : \"false\"}\n          aria-describedby={`${helperId} ${statusId}`}\n          aria-errormessage={messageId}\n          autoComplete={autocomplete}\n          spellCheck={spellcheck}\n          value={inputValue}\n          onChange={handleChange}\n          disabled={disabled} // Added disabled attribute\n        />\n        {inputValue &&\n          !disabled && ( // Only show clear button if not disabled\n            <button\n              className=\"skin-control input-clear\"\n              aria-label=\"Clear input\"\n              onClick={handleClear}\n            >\n              <svg\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                aria-hidden=\"true\"\n                focusable=\"false\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n            </button>\n          )}\n      </div>\n      <div className=\"input-helper-wrapper\">\n        <p className=\"input-helper text-sm soft\" id={helperId}>\n          {helperText}\n        </p>\n        {isInvalid && (\n          <div className=\"skin-error input-error-content\">\n            <svg\n              className=\"input-error-icon\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              aria-hidden=\"true\"\n              focusable=\"false\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            <p\n              className=\"input-error text-sm font-bold\"\n              id={messageId}\n              role=\"alert\"\n            >\n              {errorMessage}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TextInput;\n",
      "type": "registry:ui"
    }
  ]
}