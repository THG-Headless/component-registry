---
import ComponentPreview from "./ComponentPreview.astro";

interface Props {
  component: {
    name: string;
    title: string;
    description: string;
    type: string;
    category: string | null;
  };
}

const { component } = Astro.props;
---

<div class="w-full h-full flex">
  <div
    class="overflow-hidden w-full flex flex-col xl:flex-row shadow-xl border border-zinc-700"
  >
    <!-- Component preview area (left side) -->
    <div class="flex-grow p-8 flex items-center justify-center skin relative">
      <div class="w-full h-full min-h-64">
        <ComponentPreview componentName={component.name} />
      </div>
    </div>

    <!-- Sidebar (right side) -->
    <div
      class="w-full xl:w-96 xl:min-w-96 bg-zinc-900 p-6 overflow-auto relative"
    >
      <div class="flex justify-end">
        <a
          href="/"
          class="bg-zinc-800 hover:bg-zinc-700 text-white rounded-md px-3 py-2 flex items-center gap-2 transition-colors w-fit"
        >
          <span>Back to Gallery</span>
        </a>
      </div>

      <h2 class="text-xl font-bold mt-2 mb-4">{component.title}</h2>

      <div class="mb-6 flex gap-2">
        <span class="px-3 py-1 text-sm bg-blue-900 text-blue-200 rounded-full">
          {component.type}
        </span>
        {
          component.category && (
            <span class="capitalize px-3 py-1 text-sm bg-purple-900 text-purple-200 rounded-full">
              {component.category}
            </span>
          )
        }
      </div>

      <div class="mb-8">
        <h3 class="text-sm font-medium text-zinc-400 mb-2">Description</h3>
        <p class="text-sm text-zinc-300">
          {component.description}
        </p>
      </div>

      <div class="mt-8 pt-4">
        <h3 class="text-sm font-medium text-zinc-400 mb-2">
          Add to your project
        </h3>
        <div class="relative bg-zinc-950 rounded-md">
          <code
            id="copyCommand"
            class="text-xs p-3 pr-10 rounded block overflow-x-auto text-zinc-300"
          >
            altitude add {component.name.replace("@", " ")}
          </code>
          <button
            id="copyButton"
            class="absolute right-2 top-1/2 transform -translate-y-1/2 text-zinc-400 hover:text-zinc-200 transition-colors cursor-pointer"
            title="Copy to clipboard"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
              <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"
              ></path>
            </svg>
          </button>
        </div>
        <div
          id="copyNotification"
          class="text-xs text-green-400 mt-2 opacity-0 transition-opacity"
        >
          Copied to clipboard!
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const copyButton = document.getElementById("copyButton");
    const copyCommand = document.getElementById("copyCommand");
    const copyNotification = document.getElementById("copyNotification");

    if (copyButton && copyCommand && copyNotification) {
      copyButton.addEventListener("click", () => {
        const command = copyCommand.textContent?.trim();
        if (command) {
          navigator.clipboard
            .writeText(command)
            .then(() => {
              copyNotification.style.opacity = "1";
              setTimeout(() => {
                copyNotification.style.opacity = "0";
              }, 2000);
            })
            .catch((err) => {
              console.error("Could not copy text: ", err);
            });
        }
      });
    }
  });
</script>
