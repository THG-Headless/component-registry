{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "text-area@react",
  "type": "registry:ui",
  "title": "Text Area",
  "description": "A text area field with a label, helper text, and error message",
  "dependencies": [
    "@thg-altitude/standalone-components-css"
  ],
  "files": [
    {
      "path": "registry/text-area/text-area.tsx",
      "content": "import React, { useState } from \"react\";\nimport type { ChangeEvent, TextareaHTMLAttributes } from \"react\";\n\ninterface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n  label?: string;\n  helperText?: string;\n  errorMessage?: string;\n  isInvalid?: boolean;\n}\n\nexport const TextArea: React.FC<TextAreaProps> = ({\n  id = \"basic-textarea\",\n  name = \"basic-textarea\",\n  label,\n  placeholder,\n  helperText,\n  errorMessage,\n  isInvalid = false,\n  disabled = false,\n  autoComplete = \"off\",\n  spellCheck = true,\n  value = \"\",\n  minLength = 0,\n  maxLength = 500,\n  rows = 3,\n  onChange,\n  required,\n  ...restProps\n}) => {\n  const [inputValue, setInputValue] = useState<string>(String(value));\n\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setInputValue(e.target.value);\n    onChange && onChange(e);\n  };\n\n  const helperId = `${id}-helper`;\n  const charLimitId = `${id}-char-limit`;\n  const errorId = `${id}-error`;\n\n  return (\n    <div className=\"skin-form input-wrapper w-full wrapper group\">\n      <div className=\"input-label-wrapper\">\n        <label className=\"input-label text-body font-semi-bold\" htmlFor={id}>\n          {label}\n        </label>\n        {required && (\n          <span\n            className=\"input-status text-sm font-light soft\"\n            aria-hidden=\"true\"\n          >\n            Required\n          </span>\n        )}\n      </div>\n      <div className=\"input-field-wrapper\">\n        <textarea\n          className=\"input-field !text-body placeholder:soft interactive\"\n          id={id}\n          name={name}\n          placeholder={placeholder}\n          aria-invalid={isInvalid ? \"true\" : \"false\"}\n          aria-describedby={`${helperId} ${charLimitId}`}\n          aria-errormessage={errorId}\n          autoComplete={autoComplete}\n          spellCheck={spellCheck}\n          minLength={minLength}\n          maxLength={maxLength}\n          rows={rows}\n          value={inputValue}\n          onChange={handleChange}\n          disabled={disabled}\n          required={required}\n          {...restProps} // Spread remaining native textarea attributes\n        ></textarea>\n        <svg className=\"resize-handle\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n          <path\n            d=\"M12.9627 2L2 12.9843L3.01375 14L13.9764 3.01575L12.9627 2Z\"\n            fill=\"#666666\"\n          />\n          <path\n            d=\"M6.50295 12.9843L12.9862 6.48819L14 7.50394L7.5167 14L6.50295 12.9843Z\"\n            fill=\"#666666\"\n          />\n          <path\n            d=\"M11.0766 12.937L12.9862 11.0236L14 12.0394L12.0904 13.9528L11.0766 12.937Z\"\n            fill=\"#666666\"\n          />\n        </svg>\n      </div>\n      {isInvalid && (\n        <div className=\"skin-error input-error-content py-3\">\n          <svg\n            className=\"input-error-icon\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            aria-hidden=\"true\"\n            focusable=\"false\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n          <p\n            className=\"input-error text-sm font-bold\"\n            id={errorId}\n            role=\"alert\"\n          >\n            {errorMessage}\n          </p>\n        </div>\n      )}\n      <div className=\"input-helper-wrapper\">\n        <div className=\"input-helper-content\">\n          {!isInvalid && (\n            <p className=\"input-helper text-sm soft\" id={helperId}>\n              {helperText}\n            </p>\n          )}\n        </div>\n        <p\n          className=\"input-char-limit text-sm soft\"\n          id={charLimitId}\n          aria-hidden=\"true\"\n        >\n          {String(inputValue).length}/{maxLength}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default TextArea;\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "category": "input",
    "wcagCertification": null
  }
}